{"version":3,"sources":["pages/components/page-layout.tsx","common/components/card.tsx","pages/components/loading-page.tsx","common/google-sheets.tsx","pages/home.tsx","pages/flashcards.tsx","App.tsx","serviceWorker.js","index.tsx","pages/components/page-layout.module.scss"],"names":["PageLayout","children","className","styles","body","useStyles","makeStyles","root","borderRadius","boxShadow","padding","textAlign","Card","classes","classNames","LoadingPage","style","top","left","position","transform","CircularProgress","GoogleSheetsContext","React","createContext","useGoogleSheetsContext","useContext","GoogleSheetsContextProvider","useState","data","setData","useAsync","promiseFn","useCallback","Tabletop","init","key","onResolve","Provider","value","card","marginBottom","title","color","textDecoration","Home","Object","keys","map","name","to","FlashCardsInternal","elements","index","setIndex","showValue","setShowValue","element","cursor","onClick","fontWeight","bottom","width","BottomNavigation","onChange","event","Math","max","min","length","showLabels","BottomNavigationAction","label","icon","ChevronLeft","ChevronRight","Flashcards","id","useParams","shuffle","App","prefersDarkMode","useMediaQuery","theme","useMemo","createMuiTheme","palette","type","primary","dark","light","main","secondary","error","warning","info","success","ThemeProvider","CssBaseline","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.51a32c54.chunk.js","sourcesContent":["import React, { PropsWithChildren } from \"react\";\nimport styles from \"pages/components/page-layout.module.scss\";\n\nexport const PageLayout = ({\n  children\n}: PropsWithChildren<{}>): JSX.Element => {\n  return <div className={styles.body}>{children}</div>;\n};\n","import React, {PropsWithChildren} from \"react\";\nimport MaterialCard from \"@material-ui/core/Card/Card\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport classNames from \"classnames\";\n\nconst useStyles = makeStyles({\n  root: {\n    borderRadius: \"0\",\n    boxShadow: \"rgba(0, 0, 0, 0.1) 0px 36px 42px\",\n    padding: \"30px\",\n    textAlign: \"center\"\n  }\n});\n\ntype CardProps = {\n  className?: string;\n};\n\nexport const Card = ({\n  children,\n  className\n}: PropsWithChildren<CardProps>): JSX.Element => {\n  const classes = useStyles();\n\n  return (\n    <MaterialCard className={classNames(classes.root, className)}>\n      {children}\n    </MaterialCard>\n  );\n};\n","import React from \"react\";\nimport { CircularProgress } from \"@material-ui/core\";\n\nexport const LoadingPage = (): JSX.Element => {\n  return (\n    <div\n      style={{\n        top: \"40%\",\n        left: \"50%\",\n        position: \"fixed\",\n        transform: \"translate(-50%, -40%)\"\n      }}\n    >\n      <CircularProgress />\n    </div>\n  );\n};\n","import React, {\n  PropsWithChildren,\n  useCallback,\n  useContext,\n  useState\n} from \"react\";\nimport { useAsync } from \"react-async\";\n// @ts-ignore\nimport Tabletop from \"tabletop\";\nimport { LoadingPage } from \"pages/components/loading-page\";\n\nconst GoogleSheetsContext = React.createContext(null as any);\n\nexport const useGoogleSheetsContext = () => {\n  return useContext(GoogleSheetsContext);\n};\n\nexport const GoogleSheetsContextProvider = ({\n  children\n}: PropsWithChildren<{}>) => {\n  const [data, setData] = useState();\n\n  const getSpreadsheet = useAsync({\n    promiseFn: useCallback(\n      () =>\n        Tabletop.init({\n          key: \"1QYdRbzLNYf8gCN-45L-r-vhR3mRMDAkhc5xN8N0gmDo\"\n        }),\n      []\n    ),\n    onResolve: setData\n  });\n\n  if (!data) {\n    return <LoadingPage />;\n  }\n\n  return (\n    <GoogleSheetsContext.Provider value={{ data }}>\n      {children}\n    </GoogleSheetsContext.Provider>\n  );\n};\n","import React from \"react\";\nimport { PageLayout } from \"pages/components/page-layout\";\nimport { Card } from \"common/components/card\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\nimport { useGoogleSheetsContext } from \"common/google-sheets\";\n\nconst useStyles = makeStyles({\n  card: {\n    marginBottom: \"16px\"\n  },\n  title: {\n    color: \"white\",\n    textDecoration: \"none\"\n  }\n});\n\nexport const Home = (): JSX.Element => {\n  const classes = useStyles();\n  const { data } = useGoogleSheetsContext();\n\n  return (\n    <PageLayout>\n      {Object.keys(data).map(name => (\n        <Link key={name} to={`/${name}`}>\n          <Card className={classes.card}>\n            <h1 className={classes.title}>{name}</h1>\n          </Card>\n        </Link>\n      ))}\n    </PageLayout>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport { useGoogleSheetsContext } from \"common/google-sheets\";\nimport { shuffle } from \"lodash\";\nimport { Card } from \"common/components/card\";\nimport { PageLayout } from \"pages/components/page-layout\";\nimport { ChevronLeft, ChevronRight } from \"@material-ui/icons\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport FlipCameraAndroidIcon from \"@material-ui/icons/FlipCameraAndroid\";\n\nconst FlashCardsInternal = ({ elements }: { elements: any }): JSX.Element => {\n  const [index, setIndex] = useState(0);\n  const [showValue, setShowValue] = useState(false);\n\n  const element = elements[index];\n  return (\n    <>\n      <PageLayout>\n        <div\n          style={{ cursor: \"pointer\" }}\n          onClick={() => setShowValue(!showValue)}\n        >\n          <Card>\n            <h1\n              style={{\n                fontWeight: \"normal\"\n              }}\n            >\n              {showValue ? element.value : element.key}\n            </h1>\n          </Card>\n        </div>\n      </PageLayout>\n      <div\n        style={{\n          position: \"fixed\",\n          bottom: \"0\",\n          width: \"100%\",\n          left: \"0\"\n        }}\n      >\n        <BottomNavigation\n          onChange={(event, value) => {\n            switch (value) {\n              case \"previous\":\n                setShowValue(false);\n                setIndex(Math.max(0, index - 1));\n                break;\n              case \"flip\":\n                setShowValue(!showValue);\n                break;\n              case \"next\":\n                setShowValue(false);\n                setIndex(Math.min(elements.length - 1, index + 1));\n                break;\n            }\n          }}\n          showLabels\n          value={\"flip\"}\n        >\n          <BottomNavigationAction\n            label=\"Previous\"\n            value=\"previous\"\n            icon={<ChevronLeft />}\n          />\n          <BottomNavigationAction\n            label=\"Flip\"\n            value=\"flip\"\n            icon={<FlipCameraAndroidIcon />}\n          />\n          <BottomNavigationAction\n            label=\"Next\"\n            value=\"next\"\n            icon={<ChevronRight />}\n          />\n        </BottomNavigation>\n      </div>\n    </>\n  );\n};\n\nexport const Flashcards = (): JSX.Element => {\n  const { id } = useParams();\n  const { data } = useGoogleSheetsContext();\n\n  if (!data[id]) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return <FlashCardsInternal elements={shuffle(data[id].elements)} />;\n};\n","import React from \"react\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Home } from \"pages/home\";\nimport { GoogleSheetsContextProvider } from \"common/google-sheets\";\nimport { Flashcards } from \"pages/flashcards\";\n\nexport const App = () => {\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\") || true;\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? \"dark\" : \"light\",\n          primary: {\n            dark: \"rgb(100,141,174)\",\n            light: \"rgb(166, 212, 250)\",\n            main: \"#90caf9\"\n          },\n          secondary: {\n            dark: \"rgb(170, 100, 123)\",\n            light: \"rgb(246, 165, 192)\",\n            main: \"#f48fb1\"\n          },\n          error: {\n            dark: \"#d32f2f\",\n            light: \"#e57373\",\n            main: \"#f44336\"\n          },\n          warning: {\n            dark: \"#f57c00\",\n            light: \"#ffb74d\",\n            main: \"#ff9800\"\n          },\n          info: {\n            dark: \"#1976d2\",\n            light: \"#64b5f6\",\n            main: \"#2196f3\"\n          },\n          success: {\n            dark: \"#388e3c\",\n            light: \"#81c784\",\n            main: \"#4caf50\"\n          }\n        }\n      }),\n    [prefersDarkMode]\n  );\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Router>\n        <GoogleSheetsContextProvider>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/:id\" children={<Flashcards />} />\n          </Switch>\n        </GoogleSheetsContextProvider>\n      </Router>\n    </ThemeProvider>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.register();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"page-layout_header__a3A80\",\"body\":\"page-layout_body__26a0J\",\"footer\":\"page-layout_footer__3l5wF\"};"],"sourceRoot":""}